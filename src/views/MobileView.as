package views{	import components.Button;	import components.TouchList;	import controllers.Controller;	import data.ConnectionData;	import models.MobileModel;	import models.Model;	public class MobileView extends View	{		protected var _connections:Array=[];		protected var view:ConnectionView=null;		protected var _aButton:Button=null;		protected var _aList:TouchList=null;		private static var _padding:Number=10;				public function MobileView(amodel:Model, acontroller:Controller)		{			trace("MobileView.View");			super(amodel, acontroller);			refreshView();		}		public override function refreshView():void		{			clearView();			_aButton = new Button(_stage.stageWidth,_stage.stageHeight/_padding, "new", new IconAdd(), addConnection);			addChild(_aButton);			_aButton.y = _stage.stageHeight / _padding + _padding;			//////////////////////////////			_connections = [];			var aCD:ConnectionData = new ConnectionData();			aCD.label="test";			aCD.icon = new IconGlobal();			////////////////////////////////////////////////////////////////			_connections.push(aCD);			_aList = new TouchList(_connections,addConnection,_stage.stageWidth,_stage.stageHeight-(_stage.stageHeight/_padding),"");			addChild(_aList);			_aList.y = (_stage.stageHeight / _padding+_padding)*2;		}		private function addConnection(anID:Number=0):void		{			trace("MobileView.addConnection");			view = new ConnectionView(model, controller);			MobileModel(model).connection = _connections[anID];			MobileModel(model).addView([view,"ConnectionView",new IconGlobal]);		}		private function clearView():void		{			if (_aList != null)			{				removeChild(_aList);				_aList.destroyView();				_aList = null;			}			if (_aButton != null)			{				removeChild(_aButton);				_aButton.destroyView();				_aButton = null;			}		}		public override function destroyView():void		{			clearView();		}	}}